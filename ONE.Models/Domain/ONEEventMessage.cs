using ONE.Models.MessageContracts;
using System;

namespace ONE.Models.Domain
{
    public class ONEEventMessage : IONEEventMessage
    {
        /// <summary>
        /// Gets or sets the event tracking unique identifier.
        /// </summary>
        /// Event tracking Id is generated by System Input and it is carried through interpretor to processor
        public Guid GlobalTrackingGuid { get; set; }

        /// <summary>
        /// Gets or sets the event instance unique identifier.
        /// </summary>
        /// <value>
        /// The event flow instance unique identifier. This is generated by the event interpreter at the time of event firing
        /// </value>
        public Guid EventInstanceGUID { get; set; }

        /// <summary>
        /// Gets or sets the event flow unique identifier.
        /// </summary>
        /// <value>
        /// The event flow unique identifier.
        /// </value>
        public Guid EventFlowGUID { get; set; }

        /// <summary>
        /// Gets or sets the type of the event.
        /// </summary>
        /// <value>
        /// The type of the event.
        /// </value>
        public Models.Enumerations.EventType EventType { get; set; }

        /// <summary>
        /// Gets or sets the initiator unique identifier.
        /// </summary>
        /// <value>
        /// The initiator unique identifier.
        /// </value>
        public Guid InitiatorGUID { get; set; }

        /// <summary>
        /// Gets or sets the payload.
        /// </summary>
        /// <value>
        /// The payload.  This is the event data
        /// </value>
        public object Payload { get; set; }

        public Guid? TriggeredByEventFlowInstanceGUID { get; set; }

        /// <summary>
        /// Gets or sets the halted by event flow instance unique identifier.
        /// </summary>
        /// <value>
        /// The halted by event flow instance unique identifier.
        /// </value>
        /// <exception cref="NotImplementedException">
        /// </exception>
        public Guid? HaltedByEventFlowInstanceGUID { get; set; }

        public bool StopAudioOnEventFlowHalt { get; set; }

        public string EventFlowLogDetailXML { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ONEEventMessage"/> class.
        /// </summary>
        public ONEEventMessage()
        {
            //Generate the instance guid when this object is constructed
            EventInstanceGUID = Guid.NewGuid();
        }
    }
}
